@page
@model DisasterPulseApiDotnet.Src.Front.Pages.DashboardModel

@{
    ViewData["Title"] = "Dashboard";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script
    src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.2.0/dist/chartjs-plugin-datalabels.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">


<div class="container py-5">
    <h2 class="text-orange mb-4 text-center">Painel de Alertas</h2>

    <div class="row text-center mb-5 g-4">
        <div class="col-md-3 col-sm-6">
            <div class="card border-2 border-success shadow-sm bg-success-subtle">
                <div class="card-body">
                    <i class="bi bi-emoji-smile text-success fs-1 mb-2"></i>
                    <h5 class="card-title fw-semibold text-success">Baixa</h5>
                    <p class="card-text fs-3 fw-bold">@Model.CriticalityCounts.GetValueOrDefault("Low", 0)</p>
                </div>
            </div>
        </div>

        <div class="col-md-3 col-sm-6">
            <div class="card border-2 border-warning shadow-sm bg-warning-subtle">
                <div class="card-body">
                    <i class="bi bi-emoji-neutral text-warning fs-1 mb-2"></i>
                    <h5 class="card-title fw-semibold text-warning">Média</h5>
                    <p class="card-text fs-3 fw-bold">@Model.CriticalityCounts.GetValueOrDefault("Medium", 0)</p>
                </div>
            </div>
        </div>

        <div class="col-md-3 col-sm-6">
            <div class="card border-2 border-danger shadow-sm bg-danger-subtle">
                <div class="card-body">
                    <i class="bi bi-emoji-frown text-danger fs-1 mb-2"></i>
                    <h5 class="card-title fw-semibold text-danger">Alta</h5>
                    <p class="card-text fs-3 fw-bold">@Model.CriticalityCounts.GetValueOrDefault("High", 0)</p>
                </div>
            </div>
        </div>

        <div class="col-md-3 col-sm-6">
            <div class="card border-2 border-danger shadow-sm bg-danger bg-opacity-75">
                <div class="card-body">
                    <i class="bi bi-exclamation-triangle-fill text-white fs-1 mb-2"></i>
                    <h5 class="card-title fw-semibold text-white">Crítico</h5>
                    <p class="card-text fs-3 fw-bold text-white">@Model.CriticalityCounts.GetValueOrDefault("Critical",
                                                0)</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-5">
        <div class="col-12">
            <canvas id="alertsChart" height="100"></canvas>
        </div>
    </div>

    <h3 class="text-orange m-4 text-center">Alertas Recentes</h3>
    <div class="row">
        @foreach (var alert in Model.Alerts)
        {
            <div class="col-md-4 mb-4">
                <div class="card border-warning shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title text-orange">@alert.Topic</h5>
                        <p class="card-text">@alert.Description</p>
                        <span class="badge bg-warning text-dark">País ID: @alert.CountryId</span>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (!Model.Alerts.Any())
    {
        <div class="alert alert-light text-center">Nenhum alerta disponível no momento.</div>
    }
</div>

<script>
    @using System.Text.Json
    const countryLabels = @Html.Raw(JsonSerializer.Serialize(Model.AlertCountryNames));
    const alertCounts = @Html.Raw(JsonSerializer.Serialize(Model.AlertCountsByCountry));

    const ctx = document.getElementById('alertsChart').getContext('2d');

    const alertsChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: countryLabels,
            datasets: [{
                label: 'Quantidade de Alertas',
                data: alertCounts,
                backgroundColor: [
                    'rgba(245, 124, 0, 0.7)',
                    'rgba(255, 206, 86, 0.7)',
                    'rgba(75, 192, 192, 0.7)',
                    'rgba(54, 162, 235, 0.7)',
                    'rgba(153, 102, 255, 0.7)',
                    'rgba(255, 99, 132, 0.7)',
                    'rgba(255, 159, 64, 0.7)'
                ],
                borderColor: [
                    'rgba(245, 124, 0, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,
                borderRadius: 5,
            }]
        },
        options: {
            title: {
                display: true,
                text: 'Distribuição de Alertas por País',
                font: {
                    size: 18,
                    weight: 'bold'
                },
                color: '#f57c00',
                padding: {
                    top: 10,
                    bottom: 30
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    precision: 0,
                    stepSize: 1
                }
            },
            plugins: {
                legend: {
                    labels: {
                        color: '#f57c00'
                    }
                }
            }
        }
    });
</script>

<style>
    body {
        background-color: #fffefc;
    }

    .text-orange {
        color: #f57c00;
    }

    .card-title {
        font-weight: bold;
    }
</style>
